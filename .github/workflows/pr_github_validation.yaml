# SPDX-FileCopyrightText: Copyright (c) 2024-2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: NVIDIA Test Github Validation

on:
  pull_request:
    paths-ignore:
      - 'deploy/Kubernetes/**'
      - '**/*.md'

jobs:
  build-test:
    runs-on: ${{ fromJSON(vars.PR_FASTCHECK_RUNNERS) }}
    strategy:
      matrix:
        framework:
          - standard
          - vllm
    name: Build and Test - ${{ matrix.framework }}
    env:
      CONTAINER_ID: test_${{ github.run_id }}_${{ github.run_attempt }}_${{ github.job }}_${{ matrix.framework }}
      IMAGE_TAG: ghcr.io/triton-inference-server/triton_distributed:pr_fastcheck_${{ matrix.framework }}_${{ github.sha }}
      PYTEST_XML_FILE: pytest_test_report.xml
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca # v3.9.0
      - name: Build image
        id: build-image
        run: |
          ./container/build.sh --tag $IMAGE_TAG --framework ${{ matrix.framework }}
      - name: Run pytest
        env:
          PYTEST_MARKS: pre_merge
        run: |
          docker run -w /workspace --name $CONTAINER_ID $IMAGE_TAG pytest --basetemp=/tmp --junitxml=$PYTEST_XML_FILE -m $PYTEST_MARKS
      - name: Copy test report from test Container
        if: always()
        run: |
          docker cp $CONTAINER_ID:/workspace/$PYTEST_XML_FILE .
      - name: Archive test report
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        if: always()
        with:
          name: ${{ matrix.framework }}-python-test-results
          if-no-files-found: error
          path: |
            ${{ env.PYTEST_XML_FILE }}
      - name: Login to GitHub Container Registry
        id: login
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        if: ${{ steps.build-image.outcome == 'success' }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push image to GitHub Container Registry
        if: ${{ steps.build-image.outcome == 'success' && steps.login.outcome == 'success' }}
        run: |
          docker image push $IMAGE_TAG
          echo "To pull this image run:"
          echo "docker login ghcr.io # remember to use a PAT with the read:packages scope"
          echo "docker pull $IMAGE_TAG"

  event_file:
    name: "Event File"
    runs-on: ubuntu-latest
    steps:
      - name: Upload
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: Event File
          path: ${{ github.event_path }}
