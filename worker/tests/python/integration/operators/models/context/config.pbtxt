# SPDX-FileCopyrightText: Copyright (c) 2024-2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Emulates the tensorrt_llm config from:
# https://github.com/triton-inference-server/tensorrtllm_backend/blob/main/all_models/inflight_batcher_llm/tensorrt_llm/config.pbtxt


name: "context"
backend: "python"
max_batch_size: 0

parameters: {
  key: "context_delay_ms"
  value: {
    string_value: "1000"
  }
}

input [
    {
        name: "INPUT_IDS"
        data_type: TYPE_INT32
        dims: [ -1 ]
    },
    {
        name: "INPUT_LENGTH"
        data_type: TYPE_INT32
        dims: [ 1 ]
    },
    {
        name: "REQUEST_OUTPUT_LEN"
        data_type: TYPE_INT32
        dims: [ 1 ]
    }
    # Add more inputs as per requirement.
    # For simplicity only sticking with these
    # inputs for preprocessing.
]

output [
    # Section of the first request that returns the first token.
    # These will be handed over directly to the post-processor
    {
        name: "OUTPUT_IDS"
        data_type: TYPE_INT32
        dims: [ -1 ]
    },
    {
        name: "SEQUENCE_LENGTH"
        data_type: TYPE_INT32
        dims: [ 1 ]
    },
    {
        name: "REQUEST_OUTPUT_LEN"
        data_type: TYPE_INT32
        dims: [ 1 ]
    },

    # Section of the second part of handover to the generate stage
    {
        # TODO: revisit how kv cache is being exposed to generate worker.
        name: "KV_CACHE"
        data_type: TYPE_INT32
        dims: [ -1 ]
    }
    # Add more outputs as per requirement.
    # For simplicity only sticking with these
    # outputs for preprocessing.
]

# Add more parameters as per requirement

instance_group [
  {
    count: 1
    kind : KIND_CPU
  }
]
